F1
Сортировка по возрастанию

Написать функцию и программу, 
демонстрирующую работу данной функции, 
которая сортирует массив по возрастанию.

Строго согласно прототипу. Имя функции и 
все аргументы должны быть:
void sort_array(int size, int a[])

Данные на входе:
 Функция принимает на вход 
 первый аргумент - размер массива,
 второй аргумент - адрес нулевого элемента.
Данные на выходе:
 Функция ничего не возвращает.
 Производит сортировку переданного ей
 массива по возрастанию.

Пример №1
Данные на входе:
 20 19 4 3 2 1 18 17 13 12 11 16 15 14 10 9 8 7 6 5
Данные на выходе:
 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20

Пример №2
Данные на входе:
 5 4 3 2 1
Данные на выходе:
 1 2 3 4 5



F2 ДЗ 2
Четные в начало

Написать функцию и программу, 
демонстрирующую работу данной функции, 
которая ставит в начало массива все четные 
элементы, а в конец – все нечетные. Не 
нарушайте порядок следования чисел между 
собой.

Строго согласно прототипу:
void sort_even_odd(int n, int a[])

Данные на входе:
 Функция принимает на вход целые числа
Данные на выходе:
 Отсортированный исходный массив

Пример №1
Данные на входе:
 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1
Данные на выходе:
 20 18 16 14 12 10 8 6 4 2 19 17 15 13 11 9 7 5 3 1

Пример №2
Данные на входе:
 1 0 1 0 1
Данные на выходе:
 0 0 1 1 1



F3 Демо 1
Цифры по возрастанию

Написать функцию и программу, 
демонстрирующую работу данной функции. 
Вывести в порядке возрастания цифры, 
входящие в десятичную запись натурального 
числа N, не более 1000 цифр. Цифра пробел 
сколько раз данная цифра встречается в 
числе.

Данные на входе:
 Натуральное число не более 1000 цифр
Данные на выходе:
 Цифры, входящие в число через пробел в
 порядке возрастания. От самой младшей
 цифры до самой старшей и количество.

Пример №1
Данные на входе:  54321
Данные на выходе: 1 1 2 1 3 1 4 1 5 1

Пример №2
Данные на входе:  22443344
Данные на выходе: 2 2 3 2 4 4



F4 Практ 1
Цифры в строке

Написать функцию и программу, 
демонстрирующую работу данной функции.
Вывести в порядке возрастания цифры, 
входящие в строку. Цифра - количество. 

Функция должно строго соответствовать 
прототипу:
void print_digit(char s[])

Данные на входе:
 Строка из английских букв, пробелов,
 знаков препинания и цифр
Данные на выходе:
 Функция должна принимать на вход строку
 и выводить на печать по формату:
 Цифра пробел количество.

Пример
Данные на входе:  Hello123 world77.
Данные на выходе: 1 1 2 1 3 1 7 2



F5 ДЗ 3
Максимум в массиве

Написать функцию и программу, 
демонстрирующую работу данной функции, 
которая находит максимальный элемент в 
массиве.

Прототип функции:
int find_max_array(int size, int a[])

Данные на входе:
 Массив состоящий из целых чисел.
 Первый аргумент, размер массива, 
 второй аргумент адрес нулевого элемента.
Данные на выходе:
 Одно целое число

Пример №1
Данные на входе:
 773 307 371 548 531 765 402 27 573 591 217 859 662 493 173 174 125 591 324 231 130 394 573 65 570 258 343 3 586 14 785 296 140 726 598 262 807 794 510 465 66 895 182 218 302 34 205 252 687 660 952 737 2 32 310 680 36 139 346 139 489 217 767 544 158 774 883 154 802 136 569 377 867 423 224 176 118 660 513 734 45 978 983 749 909 601 270 147 433 737 789 304 842 769 815 503 190 399 3
Данные на выходе:
 983



F6 ДЗ 4
Два одинаковых

Написать функцию и программу, 
демонстрирующую работу данной функции, 
которая определяет, верно ли, что среди 
элементов массива есть два одинаковых. 
Если ответ «да», функция возвращает 1;
если ответ «нет», то 0.

Строго согласно прототипу:
int is_two_same(int size, int a[]);

Данные на входе: Массив из целых чисел
Данные на выходе: Функция возвращает 1 или 0

Пример №1
Данные на входе:
 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100
Данные на выходе:
 NO

Пример №2
Данные на входе:
 1 2 1 4 5
Данные на выходе:
 YES



F7 Демо 2
Упаковать 0 и 1

Написать функцию и программу, 
демонстрирующую работу данной функции, 
которая сжимает серии массива, состоящего 
из единиц и нулей по следующему принципу: 
например, массив 
[0,0,0,0,1,1,1,1,1,1,1,0,0,1,1,1,1] 
преобразуется в
[4,7,2,4] (т.к. начинается с 
нуля, то сразу записывается количество 
элементов первой серии); а массив 
[1,1,1,0,0,0,0,0,0,0] преобразуется в [0,3,7] (т.к. 
первая серия - это единицы, то первый 
элемент преобразованного массива 0).

Необходимо реализовать только одну 
функцию, всю программу загружать не надо. 
Прототип функции:
int compression(int a[], int b[], int N)

Данные на входе: Функция принимает 
исходный массив a[] и сжимает в массив b[], N - 
число элементов в массиве a[].
Данные на выходе: Функция возвращает число 
элементов сжатого массива b[]

Пример №1
Данные на входе:
 1 1 0 0 1 1 1 0 1 1 0 0 1 0 1 0 0 1 0 0 0 0 1 1 1 1 0 1 0 0 0 0 1 1 1 0 1 1 0 1 0 0 0 1 1 0 0 1 0 0 0 1 0 0 1 1 1 0 1 0 0 0 0 0 0 1 0 1 0 0 1 1 0 1 0 0 0 0 1 0 0 1 1 0 1 0 0 0 1 0 1 1 1 1 1 1 0 1 0 0
Данные на выходе:
 [0,2,2,3,1,2,2,1,1,1,2,1,4,4,1,1,4,3,1,2,1,1,3,2,2,1,3,1,2,3,1,1,6,1,1,1,2,2,1,1,4,1,2,2,1,1,3,1,1,6,1,1,2]

Пример №2
Данные на входе:
 0 0 1 0 0 1 1 0 0 1 1 0 1 0 0 1 1 0 1 0 1 1 1 1 0 1 1 1 1 0 0 0 0 1 1 0 0 1 0 1 0 1 1 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 0 0 0 1 0 1 1 1 1 1 0 1 0 1 1 1 0 0 0 1 0 1 1 1 1 0 1 1 1 0 0 1 1 1 1 0 1 0 1 1
Данные на выходе:
 [2,1,2,2,2,2,1,1,2,2,1,1,1,4,1,4,4,2,2,1,1,1,1,3,1,1,1,2,1,3,4,1,1,1,3,1,1,5,1,1,1,3,3,1,1,4,1,3,2,4,1,1,1,2]



F8 Практ 2
Пропущенное число

Написать функцию и программу, 
демонстрирующую работу данной функции.
В последовательности записаны целые числа 
от M до N ( M меньше N, M больше или равно 1) в 
произвольном порядке, но одно из чисел 
пропущено (остальные встречаются ровно по 
одному разу). N не превосходит 1000. 
Последовательность заканчивается числом 0. 
Определить пропущенное число.

Данные на входе:
 Последовательность целых чисел от M до N. M,
 N не превосходит 1000.
Данные на выходе:
 Одно целое число

Пример №1
Данные на входе:
 2 3 1 4 7 6 9 8 10 0
Данные на выходе:
 5

Пример №2
Данные на входе:
 41 40 39 38 37 36 34 33 32 31 50 49 48 47 46 45 44 43 42 30 0
Данные на выходе:
 35



F9
Поменять местами

Написать функцию и программу, 
демонстрирующую работу данной функции, 
которая в массиве находит максимальный из 
отрицательных элементов и меняет его 
местами с последним элементом массива. 
Гарантируется, что в массиве только один 
такой элемент или же такой элемент 
отсутствует. Если отрицательных элементов 
нет - массив не менять.

Прототип функции:
void swap_negmax_last(int size, int a[])

Данные на входе: Функция принимает на вход 
размер массива и указатель на начало 
массива. Массив состоит из целых чисел.

Пример
Данные на входе:
 1 -2 -3 -4 5 6 7 8 9 10
Данные на выходе:
 1 10 -3 -4 5 6 7 8 9 -2



F10 Демо 3
Упаковать строку

Написать функцию и программу, 
демонстрирующую работу данной функции.
Дана строка состоящая из маленьких 
латинских букв 'a'..'z'. В конце строки точка. 
Необходимо заменить повторяющиеся буквы 
на <буква><количество повторений>

Данные на входе: Входная строка состоящая 
из букв 'a'-'z' не превышающая 1000 символов. В 
конце строки символ '.'
Данные на выходе: Результат состоящий из 
букв и чисел, без пробелов

Пример №1
Данные на входе: aaaaabbbc.
Данные на выходе: a5b3c1

Пример №2
Данные на входе: zzzzzzzzzzz.
Данные на выходе: z11

Пример №3
Данные на входе: aaabbbbaa.
Данные на выходе: a3b4a2



F11 Практ 3
Сумма минимальна

Написать функцию и программу, 
демонстрирующую работу данной функции.
Дан целочисленный массив из 30 элементов. 
Элементы массива могут принимать 
произвольные целые значения помещающиеся 
в int. Необходимо создать функцию, которая 
находит и выводит в порядке возрастания 
номера двух элементов массива, сумма 
которых минимальна.

Данные на входе: Последовательность из 30 
целых чисел через пробел
Данные на выходе: Два целых числа через 
пробел

Пример
Данные на входе:
 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30
Данные на выходе:
 0 1


F12 Д5 решена
Поменять местами

Написать функцию и программу, 
демонстрирующую работу данной функции, 
которая меняет в массиве минимальный и 
максимальный элемент местами. Прототип 
функции
void change_max_min(int size, int a[])

Данные на входе: Функция принимает на вход 
размер массива и массив чисел типа int
Данные на выходе: Функция не возвращает 
значения, измененный массив сохраняется на 
месте исходного.

Пример
Данные на входе:
 1 2 3 4 5 6 7 8 9 10
Данные на выходе:
 10 2 3 4 5 6 7 8 9 1



F13
В заданном интервале

Написать функцию и программу, 
демонстрирующую работу данной функции, 
которая возвращает количество элементов 
на заданном отрезке [from, to] для массива. 
Прототип функции
int count_between(int from, int to, int size, int a[])

Данные на входе: Функция принимает 
значения концов отрезка from и to, размер 
массива, массив целых чисел.
Данные на выходе: Функция возвращает целое 
число - количество чисел в интервале [from, to]

Пример
Данные на входе:
 4 6 1 2 3 4 5 6 7 8 9 10
Данные на выходе:
 3



F14
Сумма в интервале

Написать функцию и программу, 
демонстрирующую работу данной функции, 
которая возвращает сумму элементов в 
заданном отрезке [from, to] для массива. 
Прототип функции
int sum_between_ab(int from, int to, int size, int a[])

Данные на входе: Функция принимает концы 
отрезка from и to, размер массива, массив целых 
чисел
Функция возвращает сумму элементов в 
интервале [from, to]

Пример №1
Данные на входе:
 4 6 1 2 3 4 5 6 7 8 9 10
Данные на выходе:
 15

Пример №2
Данные на входе:
 6 4 1 2 3 4 5 6 7 8 9 10
Данные на выходе:
 15



F15
Больше по модулю

Написать функцию и программу, 
демонстрирующую работу данной функции, 
которая определяет в массиве, состоящем из 
положительных и отрицательных чисел, 
сколько элементов превосходят по модулю 
максимальный элемент. Прототип функции
int count_bigger_abs(int n, int a[]);

Данные на входе: Функция получает размер 
массива и массив целых чисел
Данные на выходе: Функция возвращает целое 
число раное количеству элементов 
превосходящих по модулю максимальный 
элемент.

Пример
Данные на входе:
 1 -20 3 4 -50 6 7 8 9 10
Данные на выходе:
 2



F16 ДЗ
Клетки

Известно, что шахматная доска имеет 
размерность 8х8 и состоит из клеток 2х 
цветов, например, черного и белого (см. 
рисунок). Каждая клетка имеет координату, 
состоящую из буквы и цифры. Горизонтальное 
расположение клетки определяется буквой 
от A до H, а вертикальное – цифрой от 1 до 8. 
Заметим, что клетка с координатой А1 имеет 
черный цвет. Требуется по заданной 
координате определить цвет клетки.


Данные на входе: В единственной строке 
записана координата клетки на шахматной 
доске: всего два символа – буква и цифра 
(без пробелов).
Данные на выходе: В выходной файл нужно 
вывести «WHITE», если указанная клетка имеет 
белый цвет и «BLACK», если она черная.

Пример №1
Данные на входе: C3
Данные на выходе: BLACK

Пример №2
Данные на входе: G8
Данные на выходе: WHITE


F17
След матрицы

Написать функцию и программу, 
демонстрирующую работу данной функции, 
которая находит след матрицы в двумерном 
массиве. Показать пример ее работы на 
матрице из 5 на 5 элементов. След матрицы - 
это сумма элементов на главной диагонали.

Данные на входе:
25 целых чисел через пробел.
Данные на выходе:
Одно целое число.

Пример
Данные на входе:
1 1 1 1 1
2 2 2 2 2
3 3 3 3 3
4 4 4 4 4
5 5 5 5 5
Данные на выходе:
15



F18
Массив максимумов

Написать функцию и программу, 
демонстрирующую работу данной функции.
Дана целочисленная квадратная матрица 10 х 
10. реализовать алгоритм вычисления суммы 
максимальных элементов из каждой строки. 
Напечатать значение этой суммы. 
Предполагается, что в каждой строке такой 
элемент единственный. Реализовать функцию 
поиска максимума в строке из 10 элементов

Данные на входе:
 10 строк состоящих из 10
 целых чисел через пробел.
Данные на выходе:
 Одно целое число

Пример
Данные на входе:
 61 75 55 2 35 34 77 93 28 49 11 34 22 78 19 14 67 67 11 0 72 39 23 53 92 51 60 34 71 63 14 27 72 6 0 79 98 56 30 15 31 16 3 4 95 59 25 17 11 20 5 93 21 61 96 30 79 38 73 40 89 4 66 19 36 99 67 67 92 36 87 54 7 35 40 43 44 46 4 69 98 57 20 75 9 66 85 9 39 31 8 90 94 25 12 30 18 10 23 15
Данные на выходе:
 930


F19 ДЗ 6
Больше среднего

Написать функцию и программу, 
демонстрирующую работу данной функции.
Определить количество положительных 
элементов квадратной матрицы, превышающих 
по величине среднее арифметическое всех 
элементов главной диагонали. Реализовать 
функцию среднее арифметическое главной 
диагонали.

Данные на входе:
 5 строк по 5 целых чисел через пробел
Данные на выходе:
 Одно целое число

Пример
Данные на входе:
 1 1 1 1 1 2 2 2 2 2 3 3 3 3 3 4 4 4 4 4 5 5 5 5 5
Данные на выходе:
 10


F20
Четные и нечетные

Написать функцию и программу, 
демонстрирующую работу данной функции.
Дан целочисленный массив из 10 элементов. 
Необходимо определить количество четных и 
нечетных чисел.
 Если количество чётных 
чисел больше, чем количество нечётных, 
заменить каждое нечетное число на 
произведение нечетных цифр в его 
десятичной записи.
 Если количество 
нечётных чисел больше или равно количеству 
чётных, заменить каждое чётное число на 
произведение чётных цифр в его десятичной 
записи.

Данные на входе:
 10 целых чисел через пробел
Данные на выходе:
 10 целых чисел через пробел

Пример №1
Данные на входе:
 48 31 20 61 97 12 18 100 200 123
Данные на выходе:
 48 3 20 1 63 12 18 100 200 3

Пример №2
Данные на входе:
 48 25 57 34 23 91 90 85 30 79
Данные на выходе:
 32 25 57 4 23 91 0 85 0 79


